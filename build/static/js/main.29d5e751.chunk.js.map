{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","contact","id","shortid","generate","props","onSubmit","reset","this","className","styles","form","label","input","nameId","type","onChange","pattern","title","required","telId","button","Component","ContactListItem","onDeleteContact","item","onClick","ContactList","contacts","contact_list","map","Filter","text","App","filter","formAddContact","data","find","alert","changeFilter","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29d5e751.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Isnus\",\"name\":\"ContactForm_name__1IdSt\",\"button\":\"ContactForm_button__1HKtj\",\"label\":\"ContactForm_label__JelwN\",\"input\":\"ContactForm_input__2NUhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2iSqn\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          <span className={styles.name}>Name</span>\r\n          <input\r\n            className={styles.input}\r\n            id={this.nameId}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          <span className={styles.name}>Number</span>\r\n          <input\r\n            className={styles.input}\r\n            id={this.telId}\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n  // const id = shortid.generate();\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.contact}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.button}\r\n        onClick={() => onDeleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.contact_list}>\r\n    {contacts.map(({ name, number, id }) => (\r\n      <ContactListItem\r\n        onDeleteContact={onDeleteContact}\r\n        name={name}\r\n        number={number}\r\n        key={id}\r\n        id={id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    <span className={styles.text}>Find contacts by name</span>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport './styles.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  formAddContact = data => {\n    if (this.state.contacts.find(contact => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    } else {\n      return this.setState({\n        contacts: [data, ...this.state.contacts],\n      });\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.formAddContact} />\n\n        <h2>Contacts</h2>\n\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3eJ7n\",\"contact\":\"ContactListItem_contact__3-JFR\",\"button\":\"ContactListItem_button__5DNze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__2Fm2h\",\"label\":\"Filter_label__3km2n\",\"input\":\"Filter_input__3kzv_\"};"],"sourceRoot":""}